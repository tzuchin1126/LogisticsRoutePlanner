@model LogisticsRoutePlanner.Models.Shipment
@using LogisticsRoutePlanner.Models.ViewModels
@using LogisticsRoutePlanner.Models

@{
    ViewData["Title"] = "任務詳情";
    var addDestinationModel = new AddDestinationViewModel { ShipmentId = Model.Id };
}

<div class="container-fluid py-4">
    <div class="card shadow border-0 rounded-lg mb-4">
        <div class="card-header bg-gradient-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="mb-0">
                    <i class="fas fa-truck me-2"></i>任務詳情：@Model.ShipmentName
                </h2>
            </div>
        </div>
        
        <div class="card-body">
            <!-- 任務基本資訊 -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <p class="mb-2"><i class="fas fa-map-marker-alt text-primary me-2"></i><strong>出貨地點：</strong>@Model.OriginAddress</p>
                </div>
                <div class="col-md-6">
                    <p class="mb-2"><i class="far fa-clock text-primary me-2"></i><strong>建立時間：</strong>@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")</p>
                </div>
            </div>
            <!-- 系統訊息顯示 -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- 選擇輸入方式 -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="fas fa-keyboard me-2"></i>選擇輸入方式</h5>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <select id="inputMethod" class="form-select" onchange="handleInputMethodChange()"> 
                            <option value="single">單筆輸入</option>
                            <option value="excel">Excel批量匯入</option>
                        </select>
                    </div>

                    <!-- 單筆輸入 -->
                    <div id="singleInput" class="input-method mt-3">
                        <div class="card border-0 bg-light">
                            <div class="card-body">
                                <h5 class="card-title text-primary"><i class="fas fa-plus-circle me-2"></i>新增配送地點</h5>
                                <form asp-action="AddDestination" method="post" id="addDestinationForm">
                                    <input type="hidden" name="ShipmentId" value="@Model.Id" />
                                    @Html.AntiForgeryToken()
                                    <div asp-validation-summary="All" class="text-danger mb-3"></div>
                                    
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label class="form-label">客戶名稱</label>
                                            <div class="input-group">
                                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                                <input name="CustomerName" class="form-control" required placeholder="請輸入客戶名稱" />
                                            </div>
                                        </div>

                                        <div class="col-md-6 mb-3">
                                            <label class="form-label">地址</label>
                                            <div class="input-group">
                                                <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                                <input name="Address" id="Address" class="form-control" required placeholder="請輸入完整地址" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label class="form-label">配送物品</label>
                                            <div class="input-group">
                                                <span class="input-group-text"><i class="fas fa-box"></i></span>
                                                <input name="ProductInfo" class="form-control" placeholder="請輸入配送物品資訊" />
                                            </div>
                                        </div>

                                        <div class="col-md-6 mb-3">
                                            <label class="form-label">備註（可選）</label>
                                            <div class="input-group">
                                                <span class="input-group-text"><i class="fas fa-sticky-note"></i></span>
                                                <input name="Note" class="form-control" placeholder="其他需要注意的事項" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-plus-circle me-2"></i>新增地點
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <!-- 匯入Excel -->
                    <div id="excelImport" class="input-method mt-3" style="display:none;">
                        <div class="card border-0 bg-light">
                            <div class="card-body text-center py-5">
                                <h5 class="card-title text-primary mb-4"><i class="fas fa-file-excel me-2"></i>Excel批量匯入</h5>
                                <p class="text-muted mb-4">透過Excel檔案批量匯入配送地點資料，提高工作效率</p>
                                <a class="btn btn-success btn-lg" asp-action="ImportExcel" asp-route-id="@Model.Id">
                                    <i class="fas fa-file-import me-2"></i>匯入Excel
                                </a>
                                <p class="mt-3 small text-muted">支援格式：.xlsx, .xls</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 配送地點清單 -->
            @if (Model.Destinations?.Any() == true)
            {
                <div class="card mb-4 border-0 shadow-sm">
                    <div class="card-header bg-light d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="fas fa-list me-2"></i>配送地點清單</h5>
                        <div>
                            <span class="badge bg-primary">共 @Model.Destinations.Count 個地點</span>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>客戶名稱</th>
                                        <th>地址</th>
                                        <th class="d-none d-md-table-cell">配送物品</th>
                                        <th class="d-none d-lg-table-cell">備註</th>
                                        <th class="text-center">狀態</th>
                                        <th class="text-end">操作</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Destinations)
                                    {
                                        <tr>
                                            <td>@item.CustomerName</td>
                                            <td>
                                                <span class="d-inline-block text-truncate" style="max-width: 200px;">@item.Address</span>
                                            </td>
                                            <td class="d-none d-md-table-cell">
                                                <span class="d-inline-block text-truncate" style="max-width: 150px;">@item.ProductInfo</span>
                                            </td>
                                            <td class="d-none d-lg-table-cell">
                                                <span class="d-inline-block text-truncate" style="max-width: 150px;">@item.Note</span>
                                            </td>
                                            <td class="text-center">
                                                <span class="badge @(item.Status == DeliveryStatus.Delivered ? "bg-success" : 
                                                    item.Status == DeliveryStatus.Skipped ? "bg-warning" : "bg-secondary")">
                                                    @(item.Status == DeliveryStatus.Delivered ? "已送達" : 
                                                      item.Status == DeliveryStatus.Skipped ? "已跳過" : "待送達")
                                                </span>
                                            </td>
                                            <td class="text-end">
                                                <div class="btn-group btn-group-sm">
                                                    @* <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#detailModal-@item.Id">
                                                        <i class="fas fa-info-circle"></i><span class="d-none d-md-inline ms-1">詳情</span>
                                                    </button> *@

                                                    <button class="btn btn-outline-warning" onclick="showSkipReason(@item.Id)">
                                                        <i class="fas fa-ban"></i><span class="d-none d-md-inline ms-1">跳過</span>
                                                    </button>
                                                    
                                                    <form asp-action="DeleteDestination" method="post" class="d-inline">
                                                        <input type="hidden" name="id" value="@item.Id" />
                                                        <button type="submit" class="btn btn-outline-danger" onclick="return confirm('確定要刪除此地點嗎？');">
                                                            <i class="fas fa-trash-alt"></i><span class="d-none d-md-inline ms-1">刪除</span>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- 路線優化 -->
                <div class="row mb-4">
                    <div class="col-md-8 offset-md-2">
                        <div class="card border-0 shadow-sm bg-gradient-light text-center">
                            <div class="card-body py-4">
                                <h5 class="mb-3"><i class="fas fa-magic me-2"></i>路線優化</h5>
                                <p class="text-muted mb-4">系統將根據您的配送點自動計算最佳路線，節省時間與燃料成本</p>
                                <form asp-action="OptimizeRoute" asp-route-id="@Model.Id" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-warning btn-lg">
                                        <i class="fas fa-magic me-2"></i>自動排序配送路線
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- 當前送貨順序 -->
                <div class="card mb-4 border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0"><i class="fas fa-route me-2"></i>當前送貨順序</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover table-striped">
                                <thead>
                                    <tr>
                                        <th style="width: 80px;">順序</th>
                                        <th>客戶與地址</th>
                                        <th class="d-none d-md-table-cell">備註</th>
                                        <th class="text-center">狀態</th>
                                        <th class="text-end">操作</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var d in Model.Destinations.OrderBy(d => d.SortOrder))
                                    {
                                        <tr class="@(d.Status == DeliveryStatus.Delivered ? "table-success" : d.Status == DeliveryStatus.Skipped ? "table-warning" : "")">
                                            <td class="text-center">
                                                <span class="badge bg-dark rounded-pill">@d.SortOrder</span>
                                            </td>
                                            <td>
                                                <strong>@d.CustomerName</strong>
                                                <p class="small text-muted mb-0">@d.Address</p>
                                            </td>
                                            <td class="d-none d-md-table-cell">
                                                <small>@(string.IsNullOrEmpty(d.Note) ? "無" : d.Note)</small>
                                            </td>
                                            <td class="text-center">
                                                <span class="badge @(d.Status == DeliveryStatus.Delivered ? "bg-success" : 
                                                       d.Status == DeliveryStatus.Skipped ? "bg-warning" : "bg-secondary")">
                                                    @(d.Status == DeliveryStatus.Delivered ? "已送達" : 
                                                      d.Status == DeliveryStatus.Skipped ? "已跳過" : "待送達")
                                                </span>
                                            </td>
                                            <td class="text-end">
                                                <form asp-action="UpdateStatus" method="post" class="d-inline-flex gap-1">
                                                    <input type="hidden" name="id" value="@d.Id" />
                                                    <button name="status" value="Delivered" class="btn btn-sm @(d.Status == DeliveryStatus.Delivered ? "btn-success" : "btn-outline-success")">
                                                        <i class="fas fa-check">送達</i>
                                                    </button>
                                                    
                                                    <button name="status" value="Skipped" onclick="showSkipReason(@Model.Id)" class="btn btn-sm @(d.Status == DeliveryStatus.Skipped ? "btn-warning" : "btn-outline-warning")">
                                                        <i class="fas fa-ban">跳過</i>
                                                    </button>

                                                    <button name="status" value="Pending" class="btn btn-sm @(d.Status == DeliveryStatus.Pending ? "btn-secondary" : "btn-outline-secondary")">
                                                        <i class="fas fa-undo">待送達</i>
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <div class="text-center py-5">
                        <i class="fas fa-info-circle fa-3x mb-3"></i>
                        <h4>尚無配送資料</h4>
                        <p>請先新增配送地點，或匯入Excel數據</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- 跳過原因彈框 -->
<div id="skipReasonModal" class="modal fade" tabindex="-1" aria-labelledby="skipReasonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="skipReasonModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>跳過原因
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="skipReasonForm">
                    <div class="form-group">
                        <label for="reason" class="form-label">請選擇或輸入跳過原因：</label>
                        <select id="reasonType" class="form-select mb-2" onchange="toggleCustomReason()">
                            <option value="not-at-home">客戶不在家</option>
                            <option value="wrong-address">地址有誤</option>
                            <option value="customer-request">客戶要求延後</option>
                            <option value="custom">其他原因</option>
                        </select>
                        <textarea id="reason" name="reason" class="form-control mt-2" rows="3" placeholder="請輸入詳細原因..." style="display:none;"></textarea>
                    </div>
                    <input type="hidden" id="destinationId" name="destinationId" />
                    <div class="d-grid gap-2 mt-3">
                        <button type="submit" class="btn btn-warning">
                            <i class="fas fa-paper-plane me-2"></i>提交原因
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Styles {
    <style>
        /* 整體樣式 */
        body {
            background-color: #f8f9fa;
        }
        
        /* 卡片陰影效果 */
        .card {
            transition: all 0.3s ease;
        }
        
        .card:hover {
            box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
        }
        
        /* 表格樣式增強 */
        .table {
            margin-bottom: 0;
        }
        
        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85rem;
        }
        
        .table td {
            vertical-align: middle;
        }
        
        /* 背景漸層 */
        .bg-gradient-primary {
            background: linear-gradient(45deg, #007bff, #0056b3);
        }
        
        .bg-gradient-light {
            background: linear-gradient(45deg, #f8f9fa, #e9ecef);
        }
        
        /* 按鈕懸停效果 */
        .btn {
            transition: all 0.3s ease;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        /* 響應式適配 */
        @@media (max-width: 767.98px) {
            .card-header h2 {
                font-size: 1.5rem;
            }
            
            .table-responsive {
                border-radius: 0.25rem;
            }
            
            .btn-group-sm .btn {
                padding: 0.25rem 0.5rem;
            }
            
            .step-icon {
                width: 40px;
                height: 40px;
                font-size: 16px;
            }
            
            .steps-wizard::before {
                top: 19px;
            }
        }
        
        @@media (max-width: 575.98px) {
            .step-icon {
                width: 35px;
                height: 35px;
                font-size: 14px;
            }
            
            .steps-wizard::before {
                top: 17px;
            }
            
            .card-header h2 {
                font-size: 1.25rem;
            }
        }
    </style>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // 控制表單輸入方式顯示（單筆新增或Excel匯入）
        function handleInputMethodChange() {
            const selected = document.getElementById("inputMethod").value;
            const singleInput = document.getElementById("singleInput");
            const excelImport = document.getElementById("excelImport");

            // 先全部隱藏
            singleInput.style.display = "none";
            excelImport.style.display = "none";

            // 根據選擇顯示相對應區塊
            if (selected === "single") {
                singleInput.style.display = "block";
            } else if (selected === "excel") {
                excelImport.style.display = "block";
            }
        }

        // 頁面載入時自動執行一次
        window.addEventListener("DOMContentLoaded", () => {
            handleInputMethodChange();
        });





        // 顯示跳過原因填寫框
        function showSkipReason(destinationId) {
            $('#destinationId').val(destinationId); // 填入目的地ID
            $('#skipReasonModal').modal('show'); // 顯示 Modal
        }

        
        // 切換自定義原因輸入框
        function toggleCustomReason() {
            var reasonType = $('#reasonType').val();
            if (reasonType === 'custom') {
                $('#reason').slideDown(300);
                $('#reason').attr('required', true);
            } else {
                $('#reason').slideUp(300);
                $('#reason').attr('required', false);
            }
        }
        // 根據選擇的原因類型顯示自訂輸入框
        $('#reasonType').change(function() {
            if ($(this).val() === 'custom') {
                $('#customReason').show();
            } else {
                $('#customReason').hide();
            }
        });

        // 根據選擇的原因類型顯示自訂輸入框
        function toggleCustomReason() {
            if ($('#reasonType').val() === 'custom') {
                $('#reason').show();  // 顯示自訂原因輸入框
            } else {
                $('#reason').hide();  // 隱藏自訂原因輸入框
            }
        }

        // 提交跳過原因
        $('#skipReasonForm').submit(function (e) {
            e.preventDefault();
            var reasonType = $('#reasonType').val();
            var reason;
            
            // 根據選擇項生成原因
            if (reasonType === 'custom') {
                reason = $('#reason').val();
            } else if (reasonType === 'not-at-home') {
                reason = '客戶不在家';
            } else if (reasonType === 'wrong-address') {
                reason = '地址有誤';
            } else if (reasonType === 'customer-request') {
                reason = '客戶要求延後送達';
            }
            
            var destinationId = $('#destinationId').val();
            
            // 用 AJAX 提交跳過原因
            $.ajax({
                url: '@Url.Action("UpdateSkipReason")',
                method: 'POST',
                data: {
                    reason: reason,
                    destinationId: destinationId
                },
                success: function (response) {
                    $('#skipReasonModal').modal('hide');// 隱藏 Modal
                    
                    // 顯示成功訊息
                    Swal.fire({
                        title: '已更新',
                        text: '配送備註已成功更新！',
                        icon: 'success',
                        confirmButtonText: '確定'
                    }).then((result) => {
                        location.reload(); // 重新加載頁面以更新狀態
                    });
                },
                error: function() {
                    Swal.fire({
                        title: '發生錯誤',
                        text: '更新失敗，請稍後再試',
                        icon: 'error',
                        confirmButtonText: '確定'
                    });
                }
            });
        }); 

        // 地址自動補全 (需先加載Google Maps API)
        $(document).ready(function() {
            // 初始狀態
            toggleInputMethod();
            $('#inputMethod').change(toggleInputMethod);
            
            // 防止表單重複提交
            $('form').submit(function() {
                if ($(this).valid()) {
                    $(this).find('button[type="submit"]').prop('disabled', true);
                    $(this).find('button[type="submit"]').prepend(
                        '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>'
                    );
                }
            });

            // 地址自動補全 (需先加載Google Maps API)
            if (typeof google !== 'undefined' && google.maps && google.maps.places) {
                var addressInput = document.getElementById('Address');
                if (addressInput) {
                    var autocomplete = new google.maps.places.Autocomplete(addressInput, { 
                        types: ['geocode'],
                        componentRestrictions: { country: 'tw' } // 限制台灣地址
                    });
                    
                    // 避免在表單提交時自動完成干擾
                    $('#addDestinationForm').on('keypress', function(e) {
                        if (e.keyCode === 13) {
                            e.preventDefault();
                        }
                    });
                }
            }
            
            // 顯示頁面加載動畫 (如果需要)
            $(window).on('load', function() {
                $('.loading-overlay').fadeOut();
            });
            
            // 表格響應式處理
            adjustTableDisplay();
            $(window).resize(adjustTableDisplay);
            
            // 初始化提示工具
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
            
            // 如果有SweetAlert2，則使用它來美化確認對話框
            if (typeof Swal !== 'undefined') {
                // 刪除確認
                $(document).on('click', '.delete-confirm', function(e) {
                    e.preventDefault();
                    var form = $(this).closest('form');
                    
                    Swal.fire({
                        title: '確定要刪除？',
                        text: '刪除後將無法復原！',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#dc3545',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: '是，刪除它',
                        cancelButtonText: '取消'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            form.submit();
                        }
                    });
                });
            }
        });
        
        // 調整表格顯示方式 (響應式設計)
        function adjustTableDisplay() {
            if ($(window).width() < 768) {
                // 在小螢幕上，可能需要調整某些元素
                $('.d-sm-none-custom').addClass('d-none');
            } else {
                $('.d-sm-none-custom').removeClass('d-none');
            }
        }
        
        // 增加進度指示器功能
        function updateProgressIndicator() {
            // 計算完成百分比
            const destinations = @Json.Serialize(Model.Destinations?.Count ?? 0);
            const completed = @Json.Serialize(Model.Destinations?.Count(d => d.Status == DeliveryStatus.Delivered || d.Status == DeliveryStatus.Skipped) ?? 0);
            
            if (destinations > 0) {
                const percentage = Math.round((completed / destinations) * 100);
                $('.progress-bar').css('width', percentage + '%').attr('aria-valuenow', percentage).text(percentage + '%');
                
                // 更新進度標籤
                if (percentage === 100) {
                    $('.progress-status').text('配送完成').removeClass('text-warning').addClass('text-success');
                } else if (percentage > 0) {
                    $('.progress-status').text('進行中').addClass('text-warning');
                } else {
                    $('.progress-status').text('未開始').removeClass('text-warning');
                }
            }
        }
        
        // 頁面加載時更新進度
        $(document).ready(function() {
            updateProgressIndicator();
        });
        
        // 地圖預覽功能 (如果有Google Maps API)
        function initMap() {
            // 檢查是否有地圖容器
            var mapContainer = document.getElementById('route-map');
            if (!mapContainer) return;
            
            // 檢查是否有Google Maps API
            if (typeof google === 'undefined' || !google.maps) {
                $('#route-map').html('<div class="alert alert-warning">Google Maps API 未載入，無法顯示地圖</div>');
                return;
            }
            
            // 初始化地圖
            var map = new google.maps.Map(mapContainer, {
                zoom: 13,
                center: { lat: 25.033, lng: 121.565 }, // 預設台北市
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
            
            // 獲取配送點資料
            var destinations = @Html.Raw(Json.Serialize(
                (Model.Destinations ?? new List<ShipmentDestination>()).OrderBy(d => d.SortOrder).ToList()
            ));
            var origin = @Html.Raw(Json.Serialize(Model.OriginAddress ?? ""));
            
            if (destinations.length === 0) {
                $('#route-map').html('<div class="alert alert-info">尚無配送點，無法顯示路線</div>');
                return;
            }
            
            // 設置起點標記
            if (origin) {
                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({ 'address': origin }, function(results, status) {
                    if (status === google.maps.GeocoderStatus.OK) {
                        map.setCenter(results[0].geometry.location);
                        
                        // 添加起點標記
                        new google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location,
                            title: '起點: ' + origin,
                            icon: {
                                url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
                                scaledSize: new google.maps.Size(40, 40)
                            },
                            animation: google.maps.Animation.DROP
                        });
                        
                        // 處理所有配送點
                        processDestinations(map, destinations);
                    }
                });
            } else {
                processDestinations(map, destinations);
            }
        }
        
        // 處理配送點並繪製路線
        function processDestinations(map, destinations) {
            var bounds = new google.maps.LatLngBounds();
            var infoWindow = new google.maps.InfoWindow();
            var points = [];
            
            // 對每個配送點添加標記
            destinations.forEach(function(dest, index) {
                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({ 'address': dest.address }, function(results, status) {
                    if (status === google.maps.GeocoderStatus.OK) {
                        // 保存位置點，用於後續繪製路線
                        points.push(results[0].geometry.location);
                        bounds.extend(results[0].geometry.location);
                        
                        // 創建標記
                        var marker = new google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location,
                            title: dest.customerName,
                            label: {
                                text: (index + 1).toString(),
                                color: 'white'
                            },
                            animation: google.maps.Animation.DROP
                        });
                        
                        // 添加信息窗口
                        google.maps.event.addListener(marker, 'click', function() {
                            infoWindow.setContent(
                                '<div class="map-info-window">' +
                                '<h5>' + dest.customerName + '</h5>' +
                                '<p><strong>地址:</strong> ' + dest.address + '</p>' +
                                '<p><strong>狀態:</strong> ' + getStatusText(dest.status) + '</p>' +
                                (dest.note ? '<p><strong>備註:</strong> ' + dest.note + '</p>' : '') +
                                '</div>'
                            );
                            infoWindow.open(map, marker);
                        });
                        
                        // 檢查是否所有點都已處理完畢，然後繪製路線
                        if (points.length === destinations.length) {
                            drawRoute(map, points);
                            // 調整地圖範圍以顯示所有點
                            map.fitBounds(bounds);
                        }
                    }
                });
            });
        }
        
        // 繪製路線
        function drawRoute(map, points) {
            if (points.length < 2) return;
            
            var directionsService = new google.maps.DirectionsService();
            var directionsRenderer = new google.maps.DirectionsRenderer({
                map: map,
                suppressMarkers: true, // 不顯示默認標記
                polylineOptions: {
                    strokeColor: '#007bff',
                    strokeWeight: 5,
                    strokeOpacity: 0.7
                }
            });
            
            // 準備路線請求
            var origin = points[0];
            var destination = points[points.length - 1];
            var waypoints = [];
            
            // 添加中間點作為途經點
            for (var i = 1; i < points.length - 1; i++) {
                waypoints.push({
                    location: points[i],
                    stopover: true
                });
            }
            
            // 發送路線請求
            directionsService.route({
                origin: origin,
                destination: destination,
                waypoints: waypoints,
                optimizeWaypoints: false, // 不優化路線順序，因為我們已經設置了順序
                travelMode: google.maps.TravelMode.DRIVING
            }, function(response, status) {
                if (status === google.maps.DirectionsStatus.OK) {
                    directionsRenderer.setDirections(response);
                    
                    // 計算總距離和時間
                    var totalDistance = 0;
                    var totalDuration = 0;
                    
                    response.routes[0].legs.forEach(function(leg) {
                        totalDistance += leg.distance.value;
                        totalDuration += leg.duration.value;
                    });
                    
                    // 顯示路線資訊
                    $('#route-info').html(
                        '<div class="alert alert-info">' +
                        '<i class="fas fa-info-circle me-2"></i>' +
                        '總路程: ' + (totalDistance / 1000).toFixed(2) + ' 公里, ' +
                        '預估時間: ' + Math.round(totalDuration / 60) + ' 分鐘' +
                        '</div>'
                    );
                } else {
                    console.error('無法獲取路線：', status);
                    $('#route-info').html(
                        '<div class="alert alert-danger">' +
                        '<i class="fas fa-exclamation-triangle me-2"></i>' +
                        '無法計算路線，請確保所有地址都是有效的。' +
                        '</div>'
                    );
                }
            });
        }
        
        // 獲取狀態文字
        function getStatusText(status) {
            switch(status) {
                case 0: return '待送達';
                case 1: return '已送達';
                case 2: return '已跳過';
                default: return '未知';
            }
        }
    </script>
    
    <!-- 如果需要Google Maps，請確保在_Layout中載入API -->
    @if (Model.Destinations?.Any() == true) {
        <script>
            // 延遲載入地圖，確保頁面其他元素先載入完成
            $(window).on('load', function() {
                setTimeout(function() {
                    if (typeof initMap === 'function') {
                        initMap();
                    }
                }, 500);
            });
        </script>
    }
}